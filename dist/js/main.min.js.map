{"version":3,"sources":["main.js"],"names":["$","document","ready","playSound","e","$audio","which","currentTime","play","$key","addClass","removeTransition","originalEvent","propertyName","this","removeClass","setDate","now","Date","seconds","getSeconds","secondDegrees","$secondsArrow","css","min","getMinutes","minDegrees","$minArrow","hours","getHours","hoursDegrees","$hoursArrow","handleUpdate","$suffix","attr","documentElement","style","setProperty","name","value","toggleOpen","hasClass","panels","each","on","toggleAcive","includes","keys","window","setInterval","inputs"],"mappings":"YAAAA,GAAEC,UAAUC,MAAM,WAId,QAASC,GAAUC,GACZ,GAAMC,GAASL,EAAAA,mBAAqBI,EAAEE,MAAvB,MAAkC,EACjD,IAAKD,EAAL,CACAA,EAAOE,YAAc,EACrBF,EAAOG,MAEP,IAAMC,GAAOT,EAAAA,kBAAoBI,EAAEE,MAAtB,KACbG,GAAKC,SAAS,YASrB,QAASC,GAAiBP,GACe,cAAjCA,EAAEQ,cAAcC,cACrBb,EAAEc,MAAMC,YAAY,WAevB,QAASC,KACL,GAAMC,GAAM,GAAIC,MAGVC,EAAUF,EAAIG,aACdC,EAAkBF,EAAU,GAAM,IAAO,EAC/CG,GAAcC,IAAI,YAAlB,UAAyCF,EAAzC,OAGA,IAAMG,GAAMP,EAAIQ,aACVC,EAAeF,EAAM,GAAM,IAAO,EACxCG,GAAUJ,IAAI,YAAd,UAAqCG,EAArC,OAGA,IAAME,GAAQX,EAAIY,WACZC,EAAiBF,EAAQ,GAAM,IAAO,EAC5CG,GAAYR,IAAI,YAAhB,UAAuCO,EAAvC,QASJ,QAASE,KACL,GAAMC,GAAUjC,EAAEc,MAAMoB,KAAK,gBAAkB,EAC/CjC,UAASkC,gBAAgBC,MAAMC,YAA/B,KAAgDvB,KAAKwB,KAAQxB,KAAKyB,MAAQN,GA2G9E,QAASO,KACDxC,EAAEc,MAAM2B,SAAS,QACjBzC,EAAEc,MAAMC,YAAY,qBAEpB2B,EAAOC,KAAK,WACR3C,EAAEc,MAAMC,YAAY,sBAExBf,EAAEc,MAAMJ,SAAS,QACjBV,EAAEc,MAAM8B,GAAG,gBAAiBC,IAIpC,QAASA,GAAYzC,GACbA,EAAEQ,cAAcC,aAAaiC,SAAS,SAAW9C,EAAEc,MAAM2B,SAAS,SAClEzC,EAAEc,MAAMJ,SAAS,eA1KzB,GAAMqC,GAAO/C,EAAE,OACf+C,GAAKJ,KAAK,WACP3C,EAAEc,MAAM8B,GAAG,gBAAiBjC,KAS/BX,EAAEgD,QAAQJ,GAAG,UAAWzC,EAMxB,IAAMmB,GAAgBtB,EAAE,gBAClB2B,EAAY3B,EAAE,aACd+B,EAAc/B,EAAE,aAqBtBiD,aAAYjC,EAAS,IAKrB,IAAMkC,GAASlD,EAAE,UAMjBkD,GAAOP,KAAK,WACR3C,EAAEc,MAAM8B,GAAG,SAAUZ,GACrBhC,EAAEc,MAAM8B,GAAG,YAAaZ,IAW5B,IA0FMU,GAAS1C,EAAE,SAoBjB0C,GAAOC,KAAK,WACR3C,EAAEc,MAAM8B,GAAG,QAASJ","file":"main.min.js","sourcesContent":["$(document).ready(function () {\r\n\r\n    /** LESSON 1 **/\r\n    /* Main function */\r\n    function playSound(e) {\r\n           const $audio = $(`audio[data-key=\"${e.which}\"]`)[0];\r\n           if (!$audio) return;\r\n           $audio.currentTime = 0;\r\n           $audio.play();\r\n\r\n           const $key = $(`.key[data-key=\"${e.which}\"]`);\r\n           $key.addClass('playing');\r\n    }\r\n\r\n    /* Reverse transition */\r\n    const keys = $('.key');\r\n    keys.each(function () {\r\n       $(this).on('transitionend', removeTransition)\r\n    });\r\n\r\n    function removeTransition(e) {\r\n        if (e.originalEvent.propertyName !== 'transform') return;\r\n       $(this).removeClass('playing');\r\n    }\r\n\r\n    /* Event */\r\n    $(window).on('keydown', playSound);\r\n\r\n\r\n\r\n    /** LESSON 2 **/\r\n    /* arrows variables */\r\n    const $secondsArrow = $('.second-hand');\r\n    const $minArrow = $('.min-hand');\r\n    const $hoursArrow = $('.hour-hand');\r\n\r\n    /* main function */\r\n    function setDate() {\r\n        const now = new Date();\r\n\r\n        /* seconds settings */\r\n        const seconds = now.getSeconds();\r\n        const secondDegrees = ((seconds / 60) * 360) + 90;\r\n        $secondsArrow.css('transform', `rotate(${secondDegrees}deg)`);\r\n\r\n        /* minutes settings */\r\n        const min = now.getMinutes();\r\n        const minDegrees = ((min / 60) * 360) + 90;\r\n        $minArrow.css('transform', `rotate(${minDegrees}deg)`);\r\n\r\n        /* hours settings */\r\n        const hours = now.getHours();\r\n        const hoursDegrees = ((hours / 12) * 360) + 90;\r\n        $hoursArrow.css('transform', `rotate(${hoursDegrees}deg)`);\r\n    }\r\n    setInterval(setDate, 1000);\r\n\r\n\r\n\r\n    /** LESSON 3 **/\r\n    const inputs = $('.input3');\r\n\r\n    function handleUpdate() {\r\n        const $suffix = $(this).attr('data-sizing') || '';\r\n        document.documentElement.style.setProperty(`--${this.name}`, this.value + $suffix);\r\n    }\r\n    inputs.each(function () {\r\n        $(this).on('change', handleUpdate);\r\n        $(this).on('mousemove', handleUpdate);\r\n    });\r\n\r\n\r\n\r\n    /** LESSON 4 **/\r\n        // Get your shorts on - this is an array workout!\r\n        // ## Array Cardio Day 1\r\n\r\n        // Some data we can work with\r\n\r\n    const inventors = [\r\n            { first: 'Albert', last: 'Einstein', year: 1879, passed: 1955 },\r\n            { first: 'Isaac', last: 'Newton', year: 1643, passed: 1727 },\r\n            { first: 'Galileo', last: 'Galilei', year: 1564, passed: 1642 },\r\n            { first: 'Marie', last: 'Curie', year: 1867, passed: 1934 },\r\n            { first: 'Johannes', last: 'Kepler', year: 1571, passed: 1630 },\r\n            { first: 'Nicolaus', last: 'Copernicus', year: 1473, passed: 1543 },\r\n            { first: 'Max', last: 'Planck', year: 1858, passed: 1947 },\r\n            { first: 'Katherine', last: 'Blodgett', year: 1898, passed: 1979 },\r\n            { first: 'Ada', last: 'Lovelace', year: 1815, passed: 1852 },\r\n            { first: 'Sarah E.', last: 'Goode', year: 1855, passed: 1905 },\r\n            { first: 'Lise', last: 'Meitner', year: 1878, passed: 1968 },\r\n            { first: 'Hanna', last: 'HammarstrÃ¶m', year: 1829, passed: 1909 }\r\n        ];\r\n\r\n    const flavours = ['Chocolate Chip', 'Kulfi', 'Caramel Praline', 'Chocolate', 'Burnt Caramel', 'Pistachio', 'Rose', 'Sweet Coconut', 'Lemon Cookie', 'Toffeeness', 'Toasted Almond', 'Black Raspberry Crunch', 'Chocolate Brownies', 'Pistachio Almond', 'Strawberry', 'Lavender Honey', 'Lychee', 'Peach', 'Black Walnut', 'Birthday Cake', 'Mexican Chocolate', 'Mocha Almond Fudge', 'Raspberry'];\r\n\r\n    const people = ['Beck, Glenn', 'Becker, Carl', 'Beckett, Samuel', 'Beddoes, Mick', 'Beecher, Henry',\r\n        'Beethoven, Ludwig', 'Begin, Menachem', 'Belloc, Hilaire', 'Bellow, Saul', 'Benchley, Robert',\r\n        'Benenson, Peter', 'Ben-Gurion, David', 'Benjamin, Walter', 'Benn, Tony', 'Bennington, Chester',\r\n        'Benson, Leana', 'Bent, Silas', 'Bentsen, Lloyd', 'Berger, Ric', 'Bergman, Ingmar', 'Berio, Luciano',\r\n        'Berle, Milton', 'Berlin, Irving', 'Berne, Eric', 'Bernhard, Sandra', 'Berra, Yogi', 'Berry, Halle',\r\n        'Berry, Wendell', 'Bethea, Erin', 'Bevan, Aneurin', 'Bevel, Ken', 'Biden, Joseph', 'Bierce, Ambrose',\r\n        'Biko, Steve', 'Billings, Josh', 'Biondo, Frank', 'Birrell, Augustine', 'Black Elk', 'Blair, Robert',\r\n        'Blair, Tony', 'Blake, William'];\r\n\r\n    // Array.prototype.filter()\r\n    // 1. Filter the list of inventors for those who were born in the 1500's\r\n    // const fifteen = inventors.filter( inventor => inventor.year >= 1500 && inventor.year < 1600);\r\n    // console.table(fifteen);\r\n\r\n    // Array.prototype.map()\r\n    // 2. Give us an array of the inventors' first and last names\r\n    // const fullNames = inventors.map(inventor => `${inventor.first} ${inventor.last}`);\r\n    // console.log(fullNames);\r\n\r\n    // Array.prototype.sort()\r\n    // 3. Sort the inventors by birthdate, oldest to youngest\r\n    // const ordered = inventors.sort((a, b) => a.year > b.year ? 1 : -1);\r\n    // console.table(ordered);\r\n\r\n    // Array.prototype.reduce()\r\n    // 4. How many years did all the inventors live?\r\n    // const totalYears = inventors.reduce((total, inventor) => {\r\n    //     return total + (inventor.passed - inventor.year);\r\n    // }, 0);\r\n    // console.log(totalYears);\r\n\r\n    // 5. Sort the inventors by years lived\r\n    // const oldest = inventors.sort(function (a, b) {\r\n    //     const  lastGuy = a.passed - a.year;\r\n    //     const  nexGuy = b.passed - b.year;\r\n    //     return lastGuy > nexGuy ? -1 : 1;\r\n    // });\r\n    // console.table(oldest);\r\n\r\n\r\n    // 6. create a list of Boulevards in Paris that contain 'de' anywhere in the name\r\n    // https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris\r\n    // const category = document.querySelector('.mw-category');\r\n    // const links = [...category.querySelectorAll('a')];\r\n    // const de = links.map(link => link.textContent)\r\n    //                 .filter(streetName => streetName.includes('de'));\r\n\r\n\r\n    // 7. sort Exercise\r\n    // Sort the people alphabetically by last name\r\n    // const alpha = people.sort((lastOne, nextOne) => {\r\n    //     const [aLast, aFirst] = lastOne.split(', ');\r\n    //     const [bLast, bFirst] = nextOne.split(', ');\r\n    //     return aLast > bLast ? -1 : 1;\r\n    // });\r\n    // console.log(alpha);\r\n\r\n\r\n    // 8. Reduce Exercise\r\n    // Sum up the instances of each of these\r\n    // const data = ['car', 'car', 'truck', 'truck', 'bike', 'walk', 'car', 'van', 'bike', 'walk', 'car', 'van', 'car', 'truck' ];\r\n    // const transportation = data.reduce(function (obj, item) {\r\n    //     if(!obj[item]) {\r\n    //         obj[item] = 0;\r\n    //     }\r\n    //     obj[item]++;\r\n    //     return obj;\r\n    // }, {});\r\n    // console.log(transportation);\r\n\r\n\r\n\r\n    /** LESSON 5 **/\r\n    const panels = $('.panel');\r\n\r\n    function toggleOpen() {\r\n        if ($(this).hasClass('open')){\r\n            $(this).removeClass('open open-active');\r\n        } else {\r\n            panels.each(function () {\r\n                $(this).removeClass('open open-active');\r\n            });\r\n            $(this).addClass('open');\r\n            $(this).on('transitionend', toggleAcive);\r\n        }\r\n    }\r\n\r\n    function toggleAcive(e) {\r\n        if (e.originalEvent.propertyName.includes('flex') && $(this).hasClass('open')){\r\n            $(this).addClass('open-active');\r\n        }\r\n    }\r\n\r\n    panels.each(function () {\r\n        $(this).on('click', toggleOpen);\r\n    });\r\n});\r\n"]}