{"version":3,"sources":["main.js"],"names":["$","document","ready","playSound","e","$audio","which","currentTime","play","$key","addClass","removeTransition","originalEvent","propertyName","this","removeClass","setDate","now","Date","seconds","getSeconds","secondDegrees","$secondsArrow","css","min","getMinutes","minDegrees","$minArrow","hours","getHours","hoursDegrees","$hoursArrow","handleUpdate","$suffix","attr","documentElement","style","setProperty","name","value","keys","each","on","window","setInterval","inputs"],"mappings":"YAAAA,GAAEC,UAAUC,MAAM,WAId,QAASC,GAAUC,GACZ,GAAMC,GAASL,EAAAA,mBAAqBI,EAAEE,MAAvB,MAAkC,EACjD,IAAKD,EAAL,CACAA,EAAOE,YAAc,EACrBF,EAAOG,MAEP,IAAMC,GAAOT,EAAAA,kBAAoBI,EAAEE,MAAtB,KACbG,GAAKC,SAAS,YASrB,QAASC,GAAiBP,GACe,cAAjCA,EAAEQ,cAAcC,cACrBb,EAAEc,MAAMC,YAAY,WAevB,QAASC,KACL,GAAMC,GAAM,GAAIC,MAGVC,EAAUF,EAAIG,aACdC,EAAkBF,EAAU,GAAM,IAAO,EAC/CG,GAAcC,IAAI,YAAlB,UAAyCF,EAAzC,OAGA,IAAMG,GAAMP,EAAIQ,aACVC,EAAeF,EAAM,GAAM,IAAO,EACxCG,GAAUJ,IAAI,YAAd,UAAqCG,EAArC,OAGA,IAAME,GAAQX,EAAIY,WACZC,EAAiBF,EAAQ,GAAM,IAAO,EAC5CG,GAAYR,IAAI,YAAhB,UAAuCO,EAAvC,QASJ,QAASE,KACL,GAAMC,GAAUjC,EAAEc,MAAMoB,KAAK,gBAAkB,EAC/CjC,UAASkC,gBAAgBC,MAAMC,YAA/B,KAAgDvB,KAAKwB,KAAQxB,KAAKyB,MAAQN,GAjD9E,GAAMO,GAAOxC,EAAE,OACfwC,GAAKC,KAAK,WACPzC,EAAEc,MAAM4B,GAAG,gBAAiB/B,KAS/BX,EAAE2C,QAAQD,GAAG,UAAWvC,EAMxB,IAAMmB,GAAgBtB,EAAE,gBAClB2B,EAAY3B,EAAE,aACd+B,EAAc/B,EAAE,aAqBtB4C,aAAY5B,EAAS,IAKrB,IAAM6B,GAAS7C,EAAE,UAMjB6C,GAAOJ,KAAK,WACRzC,EAAEc,MAAM4B,GAAG,SAAUV,GACrBhC,EAAEc,MAAM4B,GAAG,YAAaV","file":"main.min.js","sourcesContent":["$(document).ready(function () {\r\n\r\n    /** LESSON 1 **/\r\n    /* Main function */\r\n    function playSound(e) {\r\n           const $audio = $(`audio[data-key=\"${e.which}\"]`)[0];\r\n           if (!$audio) return;\r\n           $audio.currentTime = 0;\r\n           $audio.play();\r\n\r\n           const $key = $(`.key[data-key=\"${e.which}\"]`);\r\n           $key.addClass('playing');\r\n    }\r\n\r\n    /* Reverse transition */\r\n    const keys = $('.key');\r\n    keys.each(function () {\r\n       $(this).on('transitionend', removeTransition)\r\n    });\r\n\r\n    function removeTransition(e) {\r\n        if (e.originalEvent.propertyName !== 'transform') return;\r\n       $(this).removeClass('playing');\r\n    }\r\n\r\n    /* Event */\r\n    $(window).on('keydown', playSound);\r\n\r\n\r\n\r\n    /** LESSON 2 **/\r\n    /* arrows variables */\r\n    const $secondsArrow = $('.second-hand');\r\n    const $minArrow = $('.min-hand');\r\n    const $hoursArrow = $('.hour-hand');\r\n\r\n    /* main function */\r\n    function setDate() {\r\n        const now = new Date();\r\n\r\n        /* seconds settings */\r\n        const seconds = now.getSeconds();\r\n        const secondDegrees = ((seconds / 60) * 360) + 90;\r\n        $secondsArrow.css('transform', `rotate(${secondDegrees}deg)`);\r\n\r\n        /* minutes settings */\r\n        const min = now.getMinutes();\r\n        const minDegrees = ((min / 60) * 360) + 90;\r\n        $minArrow.css('transform', `rotate(${minDegrees}deg)`);\r\n\r\n        /* hours settings */\r\n        const hours = now.getHours();\r\n        const hoursDegrees = ((hours / 12) * 360) + 90;\r\n        $hoursArrow.css('transform', `rotate(${hoursDegrees}deg)`);\r\n    }\r\n    setInterval(setDate, 1000);\r\n\r\n\r\n\r\n    /** LESSON 3 **/\r\n    const inputs = $('.input3');\r\n\r\n    function handleUpdate() {\r\n        const $suffix = $(this).attr('data-sizing') || '';\r\n        document.documentElement.style.setProperty(`--${this.name}`, this.value + $suffix);\r\n    }\r\n    inputs.each(function () {\r\n        $(this).on('change', handleUpdate);\r\n        $(this).on('mousemove', handleUpdate);\r\n    })\r\n});\r\n"]}